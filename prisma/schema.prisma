datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  password    String
  firstname   String?
  lastname    String?
  posts       Post[]
  role        Role @default(USER)
  appointmentsAsAuthor Appointment[] @relation("Author")
  appointmentsAsPatient Appointment[] @relation("Patient")
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Appointment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      DateTime
  title     String
  content   String?
  author    User    @relation("Author",fields: [authorId], references: [id])
  authorId  String
  patient   User    @relation("Patient",fields: [patientId], references: [id])
  patientId String
}

enum Role {
  ADMIN
  USER
  PATIENT
  DOCTOR
  LABORATORY
}


generator nestgraphql {
    provider = "node node_modules/prisma-nestjs-graphql"
    // for yarn monorepos
    // provider = "prisma-nestjs-graphql"
    output = "../src/@generated"
}
